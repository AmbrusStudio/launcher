/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../../common'
import type { Registration, RegistrationInterface } from '../../../contracts/registration/Registration'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IMX',
        name: '_imx',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'imx',
    outputs: [
      {
        internalType: 'contract IMX',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
    ],
    name: 'isRegistered',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256',
      },
    ],
    name: 'registerAndDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'quantizedAmount',
        type: 'uint256',
      },
    ],
    name: 'registerAndDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'registerAndDepositNft',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
    ],
    name: 'registerAndWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'registerAndWithdrawNft',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'registerAndWithdrawNftTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'registerAndWithdrawTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'ethKey',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'starkKey',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'assetType',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'mintingBlob',
        type: 'bytes',
      },
    ],
    name: 'regsiterAndWithdrawAndMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610f5c380380610f5c83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610ec9806100936000396000f3fe6080604052600436106100b15760003560e01c80634627d598116100695780638bdb9f801161004e5780638bdb9f80146101c5578063ea864adf146101d8578063ef4ae27f146101f857600080fd5b80634627d59814610175578063579a69881461019557600080fd5b80631259cc6c1161009a5780631259cc6c14610115578063352eb84c146101355780634280d50a1461015557600080fd5b80630a9c3beb146100b65780630f08025f146100d8575b600080fd5b3480156100c257600080fd5b506100d66100d1366004610ba9565b610218565b005b3480156100e457600080fd5b506000546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012157600080fd5b506100d6610130366004610cad565b61030a565b34801561014157600080fd5b506100d6610150366004610c3f565b6103d2565b34801561016157600080fd5b506100d6610170366004610d34565b6104c8565b34801561018157600080fd5b506100d6610190366004610b2d565b61058f565b3480156101a157600080fd5b506101b56101b0366004610dab565b610650565b604051901515815260200161010c565b6100d66101d3366004610c3f565b6106f7565b3480156101e457600080fd5b506100d66101f3366004610ac9565b6108a8565b34801561020457600080fd5b506100d6610213366004610d34565b610995565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d49061024e908a908a908a908a90600401610e28565b600060405180830381600087803b15801561026857600080fd5b505af115801561027c573d6000803e3d6000fd5b50506000546040517fd91443b70000000000000000000000000000000000000000000000000000000081526001600160a01b03909116925063d91443b791506102cf908990879087908790600401610e5b565b600060405180830381600087803b1580156102e957600080fd5b505af11580156102fd573d6000803e3d6000fd5b5050505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610340908a908a908a908a90600401610e28565b600060405180830381600087803b15801561035a57600080fd5b505af115801561036e573d6000803e3d6000fd5b50506000546040517febef0fd0000000000000000000000000000000000000000000000000000000008152600481018a905260248101879052604481018690526001600160a01b038581166064830152909116925063ebef0fd091506084016102cf565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d490610408908990899089908990600401610e28565b600060405180830381600087803b15801561042257600080fd5b505af1158015610436573d6000803e3d6000fd5b50506000546040517f019b417a0000000000000000000000000000000000000000000000000000000081526004810189905260248101869052604481018590526001600160a01b03909116925063019b417a91506064015b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b50505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906104fe908a908a908a908a90600401610e28565b600060405180830381600087803b15801561051857600080fd5b505af115801561052c573d6000803e3d6000fd5b50506000546040517fae1cdde6000000000000000000000000000000000000000000000000000000008152600481018a90526024810187905260448101869052606481018590526001600160a01b03909116925063ae1cdde691506084016102cf565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906105c5908990899089908990600401610e28565b600060405180830381600087803b1580156105df57600080fd5b505af11580156105f3573d6000803e3d6000fd5b50506000546040517f14cd70e400000000000000000000000000000000000000000000000000000000815260048101899052602481018690526001600160a01b03858116604483015290911692506314cd70e4915060640161048e565b600080546040517f1dbd1da70000000000000000000000000000000000000000000000000000000081526004810184905282916001600160a01b031690631dbd1da79060240160206040518083038186803b1580156106ae57600080fd5b505afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610aa5565b6001600160a01b0316141592915050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d49061072d908990899089908990600401610e28565b600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b505060008054604051602481018a905260448101879052606481018690529193506001600160a01b03169150349060840160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167eaeef8a00000000000000000000000000000000000000000000000000000000179052516107ee9190610ded565b60006040518083038185875af1925050503d806000811461082b576040519150601f19603f3d011682016040523d82523d6000602084013e610830565b606091505b505090508061089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4465706f736974204661696c6564000000000000000000000000000000000000604482015260640160405180910390fd5b50505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906108de908890889088908890600401610e28565b600060405180830381600087803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b50506000546040517f441a3e7000000000000000000000000000000000000000000000000000000000815260048101889052602481018590526001600160a01b03909116925063441a3e709150604401600060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b505050505050505050565b600054604051633749053560e21b81526001600160a01b039091169063dd2414d4906109cb908a908a908a908a90600401610e28565b600060405180830381600087803b1580156109e557600080fd5b505af11580156109f9573d6000803e3d6000fd5b50506000546040517f2505c3d9000000000000000000000000000000000000000000000000000000008152600481018a90526024810187905260448101869052606481018590526001600160a01b039091169250632505c3d991506084016102cf565b60008083601f840112610a6e57600080fd5b50813567ffffffffffffffff811115610a8657600080fd5b602083019150836020828501011115610a9e57600080fd5b9250929050565b600060208284031215610ab757600080fd5b8151610ac281610e7b565b9392505050565b600080600080600060808688031215610ae157600080fd5b8535610aec81610e7b565b945060208601359350604086013567ffffffffffffffff811115610b0f57600080fd5b610b1b88828901610a5c565b96999598509660600135949350505050565b60008060008060008060a08789031215610b4657600080fd5b8635610b5181610e7b565b955060208701359450604087013567ffffffffffffffff811115610b7457600080fd5b610b8089828a01610a5c565b909550935050606087013591506080870135610b9b81610e7b565b809150509295509295509295565b600080600080600080600060a0888a031215610bc457600080fd5b8735610bcf81610e7b565b965060208801359550604088013567ffffffffffffffff80821115610bf357600080fd5b610bff8b838c01610a5c565b909750955060608a0135945060808a0135915080821115610c1f57600080fd5b50610c2c8a828b01610a5c565b989b979a50959850939692959293505050565b60008060008060008060a08789031215610c5857600080fd5b8635610c6381610e7b565b955060208701359450604087013567ffffffffffffffff811115610c8657600080fd5b610c9289828a01610a5c565b979a9699509760608101359660809091013595509350505050565b600080600080600080600060c0888a031215610cc857600080fd5b8735610cd381610e7b565b965060208801359550604088013567ffffffffffffffff811115610cf657600080fd5b610d028a828b01610a5c565b909650945050606088013592506080880135915060a0880135610d2481610e7b565b8091505092959891949750929550565b600080600080600080600060c0888a031215610d4f57600080fd5b8735610d5a81610e7b565b965060208801359550604088013567ffffffffffffffff811115610d7d57600080fd5b610d898a828b01610a5c565b989b979a50986060810135976080820135975060a09091013595509350505050565b600060208284031215610dbd57600080fd5b5035919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000825160005b81811015610e0e5760208186018101518583015201610df4565b81811115610e1d576000828501525b509190910192915050565b6001600160a01b0385168152836020820152606060408201526000610e51606083018486610dc4565b9695505050505050565b848152836020820152606060408201526000610e51606083018486610dc4565b6001600160a01b0381168114610e9057600080fd5b5056fea2646970667358221220defaca49983ccf35ea871c6167ff503978db9636c353a88216c5729d7ad6545364736f6c63430008060033'

type RegistrationConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: RegistrationConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class Registration__factory extends ContractFactory {
  constructor(...args: RegistrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _imx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registration> {
    return super.deploy(_imx, overrides || {}) as Promise<Registration>
  }
  override getDeployTransaction(
    _imx: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_imx, overrides || {})
  }
  override attach(address: string): Registration {
    return super.attach(address) as Registration
  }
  override connect(signer: Signer): Registration__factory {
    return super.connect(signer) as Registration__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): RegistrationInterface {
    return new utils.Interface(_abi) as RegistrationInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Registration {
    return new Contract(address, _abi, signerOrProvider) as Registration
  }
}
